{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"Unit 1 - Digital Manufacturing Cloud Extensibility Overview \u00b6 Overview \u00b6 The DMC Extensibility Bootcamp is designed to provide participants with hands-on experience developing and deploying simple DMC extensions. The bootcamp will be delivered through a combination of live instruction of extensibility topics and several exercises to highlight how DMC extensions can be used to enhance or replace standard DMC functionality. Extensibility use cases will be discussed in detail and applied to individual processes in a business case for a discrete manufacturing assembly scenario, however all discussed use cases apply to process industry scenarios as well. Disclaimer \u00b6 Note, that this bootcamp is intended to give an introduction in the topics and not for deploying productive applications. Learning objectives \u00b6 Brief overview of BTP Extension Suite Overview of DMC Extensibility Introduction to Bootcamp scenario Audience \u00b6 Consultants Developers Development Managers Architects Plant Managers Prerequisites \u00b6 DMC Tenant BTP Trial Account Create a BTP Trial Account How to Obtain Support \u00b6 In case you have a question, find a bug, or otherwise need support to use SAP products, use: Digital Manufacturing Community SAP BTP Support Components","title":"Overview"},{"location":"index.html#unit-1-digital-manufacturing-cloud-extensibility-overview","text":"","title":"Unit 1 - Digital Manufacturing Cloud Extensibility Overview"},{"location":"index.html#overview","text":"The DMC Extensibility Bootcamp is designed to provide participants with hands-on experience developing and deploying simple DMC extensions. The bootcamp will be delivered through a combination of live instruction of extensibility topics and several exercises to highlight how DMC extensions can be used to enhance or replace standard DMC functionality. Extensibility use cases will be discussed in detail and applied to individual processes in a business case for a discrete manufacturing assembly scenario, however all discussed use cases apply to process industry scenarios as well.","title":"Overview"},{"location":"index.html#disclaimer","text":"Note, that this bootcamp is intended to give an introduction in the topics and not for deploying productive applications.","title":"Disclaimer"},{"location":"index.html#learning-objectives","text":"Brief overview of BTP Extension Suite Overview of DMC Extensibility Introduction to Bootcamp scenario","title":"Learning objectives"},{"location":"index.html#audience","text":"Consultants Developers Development Managers Architects Plant Managers","title":"Audience"},{"location":"index.html#prerequisites","text":"DMC Tenant BTP Trial Account Create a BTP Trial Account","title":"Prerequisites"},{"location":"index.html#how-to-obtain-support","text":"In case you have a question, find a bug, or otherwise need support to use SAP products, use: Digital Manufacturing Community SAP BTP Support Components","title":"How to Obtain Support"},{"location":"BTPExtensionSuite.html","text":"Why Build Extensions \u00b6 SAP\u2019s intelligent suite and business networks are a great foundation. They support integrated end-to-end processes for all industries and offer an unparalleled scope of functionality. The concept of an integrated suite always wins \u2013 but only when the speed of innovation is compatible with the need for innovation. Demands for software at the shop floor level are changing, though. Digital technologies, regulations, crises, market entrants, and data-driven business models disrupt carefully balanced supply networks, dissolve markets, and impact opportunities so fast that large-scale enterprise systems are challenged to keep pace. To address this innovation need, we can build extensions for SAP Digital Manufacturing Cloud using the SAP Business Technology Platform as the foundation. When a customer wishes to extend their business application environment, be it just SAP or a hybrid environment of SAP and Third Party solutions delivered both on premise and in the cloud the requirements they have typically fall into these 3 pillars. These pillars provide organizations with a holistic set of capabilities that can help them to rapidly build or extend new apps/innovations to tackle the challenges of disruption and change. Built on a flexible, scalable business Business Technology Platform these pillars are then complemented by: Enterprise grade capabilities and built-in intelligence like AI-enabled bots Best run practices and guidelines At SAP we have what we call the Discovery Center : this location enables developers to easily explore, adopt and implement the Integration and Extension Suite services, and provides step-by-step guidance from development to go-live, and access to samples and use cases. Ready to use pre-integrated services and apps to jumpstart your extension development optimized for SAP landscapes (finance, procurement, HR, sales, marketing) \u2013 with pre-built/pre-integrated/pre-configured services, API\u2019s and bots Not to mention an SAP application store and strong partner ecosystem with: Over 1700+ apps available on the SAP App Center 1000s partners building apps or offering to deliver solutions on the SAP Business Technology Platform with roughly 30% building integration/extension scenarios on behalf of customers. How to Get Started \u00b6 In this Bootcamp we will use a trial account to get started experimenting with extension scenarios. However, trial accounts have limited resources and usability which can be upgraded to PAYG or a Cloud Subscription model. As mentioned, the Extension Suite comes with guidance. While the actual technical guidance is much more detailed, building extensions can be seen as four steps: Connect to existing data source: SAP or non-SAP, API-based or event driven, even data staging (copy business data to SAP HANA on SCP) is no issue. Creating the endpoint is about creating an API and/or event-based backend for a particular extension \u2013 tailored to the use case at hand. By Adding Channels, you decide by which digital touchpoints your end-uses should access the extension: web (portal, launchpad, work zone), mobile apps, conversational UX or others. In the last step, developers deploy their extension to SAP BTP and leverage the operational features to run the extension \u2013 automated and ready to scale. Here are our deployment options: By using the SAP Cloud Platform, Cloud Foundry runtime, you benefit from a high level of abstraction from the underlying infrastructure, and thus a simplified developer experience for business application development. The SAP Cloud Platform, Kyma runtime provides you with more flexibility and the possibility to use containers and Kubernetes. If you are already familiar with Kubernetes, using Kyma will help to develop a cloud native solution more easily. Note - in this Bootcamp we are going to use Cloud Foundry and Kyma runtimes to build our extensions. The ABAP runtime is not the focus of the bootcamp.","title":"BTP Extension Suite"},{"location":"BTPExtensionSuite.html#why-build-extensions","text":"SAP\u2019s intelligent suite and business networks are a great foundation. They support integrated end-to-end processes for all industries and offer an unparalleled scope of functionality. The concept of an integrated suite always wins \u2013 but only when the speed of innovation is compatible with the need for innovation. Demands for software at the shop floor level are changing, though. Digital technologies, regulations, crises, market entrants, and data-driven business models disrupt carefully balanced supply networks, dissolve markets, and impact opportunities so fast that large-scale enterprise systems are challenged to keep pace. To address this innovation need, we can build extensions for SAP Digital Manufacturing Cloud using the SAP Business Technology Platform as the foundation. When a customer wishes to extend their business application environment, be it just SAP or a hybrid environment of SAP and Third Party solutions delivered both on premise and in the cloud the requirements they have typically fall into these 3 pillars. These pillars provide organizations with a holistic set of capabilities that can help them to rapidly build or extend new apps/innovations to tackle the challenges of disruption and change. Built on a flexible, scalable business Business Technology Platform these pillars are then complemented by: Enterprise grade capabilities and built-in intelligence like AI-enabled bots Best run practices and guidelines At SAP we have what we call the Discovery Center : this location enables developers to easily explore, adopt and implement the Integration and Extension Suite services, and provides step-by-step guidance from development to go-live, and access to samples and use cases. Ready to use pre-integrated services and apps to jumpstart your extension development optimized for SAP landscapes (finance, procurement, HR, sales, marketing) \u2013 with pre-built/pre-integrated/pre-configured services, API\u2019s and bots Not to mention an SAP application store and strong partner ecosystem with: Over 1700+ apps available on the SAP App Center 1000s partners building apps or offering to deliver solutions on the SAP Business Technology Platform with roughly 30% building integration/extension scenarios on behalf of customers.","title":"Why Build Extensions"},{"location":"BTPExtensionSuite.html#how-to-get-started","text":"In this Bootcamp we will use a trial account to get started experimenting with extension scenarios. However, trial accounts have limited resources and usability which can be upgraded to PAYG or a Cloud Subscription model. As mentioned, the Extension Suite comes with guidance. While the actual technical guidance is much more detailed, building extensions can be seen as four steps: Connect to existing data source: SAP or non-SAP, API-based or event driven, even data staging (copy business data to SAP HANA on SCP) is no issue. Creating the endpoint is about creating an API and/or event-based backend for a particular extension \u2013 tailored to the use case at hand. By Adding Channels, you decide by which digital touchpoints your end-uses should access the extension: web (portal, launchpad, work zone), mobile apps, conversational UX or others. In the last step, developers deploy their extension to SAP BTP and leverage the operational features to run the extension \u2013 automated and ready to scale. Here are our deployment options: By using the SAP Cloud Platform, Cloud Foundry runtime, you benefit from a high level of abstraction from the underlying infrastructure, and thus a simplified developer experience for business application development. The SAP Cloud Platform, Kyma runtime provides you with more flexibility and the possibility to use containers and Kubernetes. If you are already familiar with Kubernetes, using Kyma will help to develop a cloud native solution more easily. Note - in this Bootcamp we are going to use Cloud Foundry and Kyma runtimes to build our extensions. The ABAP runtime is not the focus of the bootcamp.","title":"How to Get Started"},{"location":"BootcampAgenda.html","text":"SAP DMC Exensibility Bootcamp \u00b6 Abstract \u00b6 Digital Manufacturing Cloud Exentions enable our customers to automate and extend business processes, configure process variants based on the local shop floor constraints. In this bootcamp, we will explore the latest extensibility capability, provide the hand-on exercises for the business use cases and explain the role Digital Manufacutring Extensions in the bigger story. Language \u00b6 English Key Dates \u00b6 Date Content Exercise Oct 20 BTP Extension Suite Overview and Introducing Digital Manufacturing Cloud Extensibility Oct 21 Integration of custom fields from ERP and In-App Extensibility Exercise 1 \"Create and Release Production Order\" Oct 25 Machine Learning Extensions on the shop floor Exercise 2 \"Perform Assembly Operation with visual inspection\" Oct 26 Business Process Extensions connecting sensor data Exercise 3 \"Perform Inspection Operation (1/2)\" Oct 27 UI Extensions with custom POD plugins and Side by Side Extensions Exercise 4 \"Perform Inspection Operation (2/2)\" Oct 28 Machine Monitoring Exercise 5 \"Machine Monitoring\" Nov 1 Bootcamp Content Review and Wrap up Audience \u00b6 Partner Technical, Functional and Development Consultants, Architects","title":"SAP DMC Exensibility Bootcamp"},{"location":"BootcampAgenda.html#sap-dmc-exensibility-bootcamp","text":"","title":"SAP DMC Exensibility Bootcamp"},{"location":"BootcampAgenda.html#abstract","text":"Digital Manufacturing Cloud Exentions enable our customers to automate and extend business processes, configure process variants based on the local shop floor constraints. In this bootcamp, we will explore the latest extensibility capability, provide the hand-on exercises for the business use cases and explain the role Digital Manufacutring Extensions in the bigger story.","title":"Abstract"},{"location":"BootcampAgenda.html#language","text":"English","title":"Language"},{"location":"BootcampAgenda.html#key-dates","text":"Date Content Exercise Oct 20 BTP Extension Suite Overview and Introducing Digital Manufacturing Cloud Extensibility Oct 21 Integration of custom fields from ERP and In-App Extensibility Exercise 1 \"Create and Release Production Order\" Oct 25 Machine Learning Extensions on the shop floor Exercise 2 \"Perform Assembly Operation with visual inspection\" Oct 26 Business Process Extensions connecting sensor data Exercise 3 \"Perform Inspection Operation (1/2)\" Oct 27 UI Extensions with custom POD plugins and Side by Side Extensions Exercise 4 \"Perform Inspection Operation (2/2)\" Oct 28 Machine Monitoring Exercise 5 \"Machine Monitoring\" Nov 1 Bootcamp Content Review and Wrap up","title":"Key Dates"},{"location":"BootcampAgenda.html#audience","text":"Partner Technical, Functional and Development Consultants, Architects","title":"Audience"},{"location":"BootcampUseCase.html","text":"Business Case \u00b6 Lift truck manufacturer producing lifter assemblies. Identified gaps in standard solution functionality to be addressed with DMC extensions. Simple scenarios for an end-to-end subassembly manufacturing process that highlight different extensibility use cases. Identified Gaps \u00b6 SFC numbering scheme must include the Sales Order number as a prefix for each SFC. Custom Next Number logic is required. The Production Order IDoc must be enhanced to include Sales Order number as a custom field. Missing components detection via trained Machine Learning models to support Nonconformance logging during lifter assembly. Recent torque values during assembly must be recorded and used to inform the Nonconformance process. If the last 3 torque values for a machine are out-of-spec, a Nonconformance must be logged automatically. If the last 3 torque values for a machine are out-of-spec, an alert must be sent to a 3rd party system (MS Teams). Operators must be able to identify and record the reason for the torque variance by selecting a Variance Code that will be recorded on the Production Order in S/4 upon order confirmation. The personnel ID of the operator performing the torque inspection must be recorded on the Production Order in S/4 upon order confirmation. Personnel IDs must be referenced and maintained external to DMC. DMC resources must be conditionally disabled based on machine status tags on the machine controller. Scenarios \u00b6 Our business scenario follows a standard DMC production flow that has been enhanced at several points in the process with DMC extensions to address the above gaps. The End-to-End scenario assumes a S/4HANA integrated landscape (Scenario 1), however standalone DMC environments can also be used to build and deploy the extensions in this bootcamp that do not rely on S/4 integration (Scenario 2) with some added manual steps. Other than S/4 integration dependancies, Scenario 1 and 2 are identical. A machine monitoring scenario separate from the production process is also covered (Scenario 3). Scenario 1: DMC Production with S/4HANA integration Scenario 2: Standalone DMC Production Scenario 3: Machine Monitoring To use an integrated S/4 environment, participants must either create associated master data in S/4HANA that matches the data provided for the bootcamp, or use their own master and transactional data. The extensions covered in the business scenario can be applied to any similar, basic data set. End-to-End Scenario The End-to-End scenario assumes that DMC is integrated with S/4HANA (Scenario 1). We will be executing a simple production order for a lifter assembly with only 2 operations - Assembly and Inspection. The process begins with the release of a Production Order in S/4 and standard IDoc integration to DMC through CPI. The inbound Production Order message is enhanced during integration to include Sales Order information. The Production Order is automatically released in DMC and SFCs are generated by custom Next Number logic that include the Sales Order prefix scheme. The operator starts an SFC at the first routing operation - Assembly. During assembly, torque data and assembly image data are captured. The assembly is visually inspected using the captured image data and a pre-trained ML model to calculate the probability of incorrect assembly. A Nonconformance may be logged by the operator based on the output of the model analysis. The SFC is completed at the Assembly operation and started at the Inspection operation. The operator initiates a torque evaluation to check for a recent trend of out-of-spec torque values. If a series of 3 consecutive violations is discovered, the SFC is deemed nonconformant and the custom production process automatically creates an NC and sends an alert to an external system, MS Teams. The operator closes all open NCs and completes the final operation by selecting a Variance Code and inputing Personnel ID. The SFC is completed and a production confirmation message is generated for the order. The supplied Variance Code and Personnel ID are added to the confirmation message. The production confirmation is received to the production order in S/4HANA and the additional data is recorded. Scenario 3 is a Machine Monitoring process that simulates machine status and updates corresponding DMC work center resources to reflect down and up events. The basic process is as follows: Monitored machine controller status tag satisfies condition for an event change. Corresponding DMC resource is disabled or enabled based on message type. Monitoring dashboard andon light is updated to reflect new machine status. Scenario 1 - Integrated with SAP S/4HANA Scenario 1 follows a DMC solution that is integrated with S/4HANA for master data (materials, BOMs, routings, work centers, etc.) and transactional data (sales & production orders). In Scenario 1, production orders will be created in S/4 and sent to DMC through standard integration IDocs. The production order message will be enhanced through integration extensions to add the sales order data as required. Plant Connectivity is shown for some processes in the block diagrams but is simulated at the ingestion point in DMC. PCo is not required to follow this scenario and is not covered in the exercises, however participants with fully integrated PCo environments can leverage the functionality if they choose to do so. Create and Release Production Order Create Production Order - With custom fields such as sales order Process Production Order (Integration) - Integration Extension - with custom fields Receive Order - Custom Fields Extension Release Shop Order - Generate SFC - In-App Extension; Custom Next Number Logic Perform Assembly Operation Start SFC - With a Production Process Autoassemble from Production Process Perform Automated Data Collection Evaluate the Parameter Limits (torque) Evaluate Torque -> Read 2 Torque values (Left Torque, Right Torque) -> Data Collection -> Pass an Array of objects (value, lower range and upper range ) to Extension. If outside of Parameter Limits, automatically create a Nonconformance Perform Assembly Operation - Visual Inspection Manual Data Collection of Image Visual Inspector Plugin, Do Image Analysis Complete SFC Attempt 1 - Complete SFC - With a Production Process Check for Open NCs If Open NC's, send error message Close Open NC - Manually Attempt 2 - Complete SFC - With a Production Process Check for open NCs If No Open NC's, Operator Prompted with Variance Code Screen (POD Plugin) via Guided Execution, include acquisition of Personnel Number -> BTP Storage of lookup table USER ID & Personnel Number - Side by Side Extension) Open NC Check will pass Variance Reason Code (Fixed list in the custom POD Plugin UI) and Personnel Number should be passed to CPI and S/4 Layer as part of the order confirmation (New iFlow - handles input and output) Scenario 2 - No integration with SAP S/4HANA Scenario 2 follows a DMC solution that is not integrated with S/4HANA and requires that all data otherwise originating in S/4 in Scenario 1 instead be entered or generated manually in DMC. Integration extensions are not included in this scenario. Create and Release Production Order Create Production Order - With custom fields such as sales order Process Production Order (Integration) - Integration Extension - with custom fields Receive Order - Custom Fields Extension Release Shop Order - Generate SFC - In-App Extension; Custom Next Number Logic Perform Assembly Operation Start SFC - With a Production Process Autoassemble from Production Process Perform Automated Data Collection Evaluate the Parameter Limits (torque)) Complete Assembly Operation -> Read 2 Torque values (Left Torque, Right Torque) -> Data Collection -> Pass an Array of objects (value, lower range and upper range ) to Extension. If outside of Parameter Limits, automatically create a Nonconformance Perform Assembly Operation - Visual Inspection Manual Data Collection of Image Visual Inspector Plugin, Do Image Analysis Complete SFC Perform Inspection Operation Attempt 1 - Complete SFC - With a Production Process Check for Open NCs If Open NC's, send error message Close Open NC - Manually Attempt 2 - Complete SFC - With a Production Process Check for open NCs If No Open NC's, Operator Prompted with Variance Code Screen (POD Plugin) via Guided Execution, include acquisition of Personnel Number -> BTP Storage of lookup table USER ID & Personnel Number - Side by Side Extension) Open NC Check will pass Variance Reason Code (Fixed list in the custom POD Plugin UI) and Personnel Number should be passed to CPI and S/4 Layer as part of the order confirmation (New iFlow - handles input and output) Scenario 3 - Machine Monitoring Scenario 3 is a Machine Monitoring scenario that simulates machine status change events and updates DMC resources conditionally. Plant Connectivity is shown for some processes in the block diagrams but is simulated at the ingestion point in DMC. PCo is not required to follow this scenario and is not covered in the exercises, however participants with fully integrated PCo environments can leverage the functionality if they choose to do so. Machine Monitoring Create a subscription on a tag value in PCO (Configuration) -> machine status 0, 1, 2, 3, 4, 5, 6 -> Change resource status.\u200b Step 2 - Create an Alert for production supervisor. (Configuration) -> Manager Alert -> EHS Request\u200b Send Status Change to Andon Lights - (Outbound Web Service call to Side by Side Extension) Data Load \u00b6 Plant: EBC200 Work Center: WC-LIFT Operations: LA-ASSEMBLY, LA-INSPECTION Resources: DEFAULT Material: LIFTER-ASSY Component: LIFTER-FRAME NC Groups: PRIMARY, MISSING_SCREW NC Codes: ASSEMBLY_TORQUE, SCREW_LEFT, SCREW_RIGHT","title":"Bootcamp Scenario"},{"location":"BootcampUseCase.html#business-case","text":"Lift truck manufacturer producing lifter assemblies. Identified gaps in standard solution functionality to be addressed with DMC extensions. Simple scenarios for an end-to-end subassembly manufacturing process that highlight different extensibility use cases.","title":"Business Case"},{"location":"BootcampUseCase.html#identified-gaps","text":"SFC numbering scheme must include the Sales Order number as a prefix for each SFC. Custom Next Number logic is required. The Production Order IDoc must be enhanced to include Sales Order number as a custom field. Missing components detection via trained Machine Learning models to support Nonconformance logging during lifter assembly. Recent torque values during assembly must be recorded and used to inform the Nonconformance process. If the last 3 torque values for a machine are out-of-spec, a Nonconformance must be logged automatically. If the last 3 torque values for a machine are out-of-spec, an alert must be sent to a 3rd party system (MS Teams). Operators must be able to identify and record the reason for the torque variance by selecting a Variance Code that will be recorded on the Production Order in S/4 upon order confirmation. The personnel ID of the operator performing the torque inspection must be recorded on the Production Order in S/4 upon order confirmation. Personnel IDs must be referenced and maintained external to DMC. DMC resources must be conditionally disabled based on machine status tags on the machine controller.","title":"Identified Gaps"},{"location":"BootcampUseCase.html#scenarios","text":"Our business scenario follows a standard DMC production flow that has been enhanced at several points in the process with DMC extensions to address the above gaps. The End-to-End scenario assumes a S/4HANA integrated landscape (Scenario 1), however standalone DMC environments can also be used to build and deploy the extensions in this bootcamp that do not rely on S/4 integration (Scenario 2) with some added manual steps. Other than S/4 integration dependancies, Scenario 1 and 2 are identical. A machine monitoring scenario separate from the production process is also covered (Scenario 3). Scenario 1: DMC Production with S/4HANA integration Scenario 2: Standalone DMC Production Scenario 3: Machine Monitoring To use an integrated S/4 environment, participants must either create associated master data in S/4HANA that matches the data provided for the bootcamp, or use their own master and transactional data. The extensions covered in the business scenario can be applied to any similar, basic data set. End-to-End Scenario The End-to-End scenario assumes that DMC is integrated with S/4HANA (Scenario 1). We will be executing a simple production order for a lifter assembly with only 2 operations - Assembly and Inspection. The process begins with the release of a Production Order in S/4 and standard IDoc integration to DMC through CPI. The inbound Production Order message is enhanced during integration to include Sales Order information. The Production Order is automatically released in DMC and SFCs are generated by custom Next Number logic that include the Sales Order prefix scheme. The operator starts an SFC at the first routing operation - Assembly. During assembly, torque data and assembly image data are captured. The assembly is visually inspected using the captured image data and a pre-trained ML model to calculate the probability of incorrect assembly. A Nonconformance may be logged by the operator based on the output of the model analysis. The SFC is completed at the Assembly operation and started at the Inspection operation. The operator initiates a torque evaluation to check for a recent trend of out-of-spec torque values. If a series of 3 consecutive violations is discovered, the SFC is deemed nonconformant and the custom production process automatically creates an NC and sends an alert to an external system, MS Teams. The operator closes all open NCs and completes the final operation by selecting a Variance Code and inputing Personnel ID. The SFC is completed and a production confirmation message is generated for the order. The supplied Variance Code and Personnel ID are added to the confirmation message. The production confirmation is received to the production order in S/4HANA and the additional data is recorded. Scenario 3 is a Machine Monitoring process that simulates machine status and updates corresponding DMC work center resources to reflect down and up events. The basic process is as follows: Monitored machine controller status tag satisfies condition for an event change. Corresponding DMC resource is disabled or enabled based on message type. Monitoring dashboard andon light is updated to reflect new machine status. Scenario 1 - Integrated with SAP S/4HANA Scenario 1 follows a DMC solution that is integrated with S/4HANA for master data (materials, BOMs, routings, work centers, etc.) and transactional data (sales & production orders). In Scenario 1, production orders will be created in S/4 and sent to DMC through standard integration IDocs. The production order message will be enhanced through integration extensions to add the sales order data as required. Plant Connectivity is shown for some processes in the block diagrams but is simulated at the ingestion point in DMC. PCo is not required to follow this scenario and is not covered in the exercises, however participants with fully integrated PCo environments can leverage the functionality if they choose to do so. Create and Release Production Order Create Production Order - With custom fields such as sales order Process Production Order (Integration) - Integration Extension - with custom fields Receive Order - Custom Fields Extension Release Shop Order - Generate SFC - In-App Extension; Custom Next Number Logic Perform Assembly Operation Start SFC - With a Production Process Autoassemble from Production Process Perform Automated Data Collection Evaluate the Parameter Limits (torque) Evaluate Torque -> Read 2 Torque values (Left Torque, Right Torque) -> Data Collection -> Pass an Array of objects (value, lower range and upper range ) to Extension. If outside of Parameter Limits, automatically create a Nonconformance Perform Assembly Operation - Visual Inspection Manual Data Collection of Image Visual Inspector Plugin, Do Image Analysis Complete SFC Attempt 1 - Complete SFC - With a Production Process Check for Open NCs If Open NC's, send error message Close Open NC - Manually Attempt 2 - Complete SFC - With a Production Process Check for open NCs If No Open NC's, Operator Prompted with Variance Code Screen (POD Plugin) via Guided Execution, include acquisition of Personnel Number -> BTP Storage of lookup table USER ID & Personnel Number - Side by Side Extension) Open NC Check will pass Variance Reason Code (Fixed list in the custom POD Plugin UI) and Personnel Number should be passed to CPI and S/4 Layer as part of the order confirmation (New iFlow - handles input and output) Scenario 2 - No integration with SAP S/4HANA Scenario 2 follows a DMC solution that is not integrated with S/4HANA and requires that all data otherwise originating in S/4 in Scenario 1 instead be entered or generated manually in DMC. Integration extensions are not included in this scenario. Create and Release Production Order Create Production Order - With custom fields such as sales order Process Production Order (Integration) - Integration Extension - with custom fields Receive Order - Custom Fields Extension Release Shop Order - Generate SFC - In-App Extension; Custom Next Number Logic Perform Assembly Operation Start SFC - With a Production Process Autoassemble from Production Process Perform Automated Data Collection Evaluate the Parameter Limits (torque)) Complete Assembly Operation -> Read 2 Torque values (Left Torque, Right Torque) -> Data Collection -> Pass an Array of objects (value, lower range and upper range ) to Extension. If outside of Parameter Limits, automatically create a Nonconformance Perform Assembly Operation - Visual Inspection Manual Data Collection of Image Visual Inspector Plugin, Do Image Analysis Complete SFC Perform Inspection Operation Attempt 1 - Complete SFC - With a Production Process Check for Open NCs If Open NC's, send error message Close Open NC - Manually Attempt 2 - Complete SFC - With a Production Process Check for open NCs If No Open NC's, Operator Prompted with Variance Code Screen (POD Plugin) via Guided Execution, include acquisition of Personnel Number -> BTP Storage of lookup table USER ID & Personnel Number - Side by Side Extension) Open NC Check will pass Variance Reason Code (Fixed list in the custom POD Plugin UI) and Personnel Number should be passed to CPI and S/4 Layer as part of the order confirmation (New iFlow - handles input and output) Scenario 3 - Machine Monitoring Scenario 3 is a Machine Monitoring scenario that simulates machine status change events and updates DMC resources conditionally. Plant Connectivity is shown for some processes in the block diagrams but is simulated at the ingestion point in DMC. PCo is not required to follow this scenario and is not covered in the exercises, however participants with fully integrated PCo environments can leverage the functionality if they choose to do so. Machine Monitoring Create a subscription on a tag value in PCO (Configuration) -> machine status 0, 1, 2, 3, 4, 5, 6 -> Change resource status.\u200b Step 2 - Create an Alert for production supervisor. (Configuration) -> Manager Alert -> EHS Request\u200b Send Status Change to Andon Lights - (Outbound Web Service call to Side by Side Extension)","title":"Scenarios"},{"location":"BootcampUseCase.html#data-load","text":"Plant: EBC200 Work Center: WC-LIFT Operations: LA-ASSEMBLY, LA-INSPECTION Resources: DEFAULT Material: LIFTER-ASSY Component: LIFTER-FRAME NC Groups: PRIMARY, MISSING_SCREW NC Codes: ASSEMBLY_TORQUE, SCREW_LEFT, SCREW_RIGHT","title":"Data Load"},{"location":"DMCUseCases.html","text":"In-App Extensions The ability to extend a core DMC application* by the available extension points (e.g. extend existing API, trigger a parallel processes, augment API outputs,\u2026etc.). This spectrum of this extensibility use case can go from simple to complex if the logic of the extension needs to call API\u2019s from DMC. If the extension is emulated in DMC PaaS account, the infrastructure will have to be managed separately including scaling, deploying,...etc. while in the Kyma Runtime environment it\u2019s fully SAP managed. *Limited DMC application support today for this use case Personas: Software Developer Process Extensions An extension that will be called from the DMC Production Process Designer process flow that will be executed in the DMC Process Engine (PE) (e.g. extension could trigger a parallel process in an external system, augment the core process flow,\u2026etc.). Provides flexibility to adapt processes within and outside DMC. The extension point is usually triggered manually by an operator from the production operator dashboard or triggered from machines automatically as a subscription. Personas: Business User Software Developer (NodeJs, Microservices) POD Extensions A custom plug-in extension to the DMC Production Operation Dashboard (POD). DMC will treat the custom plugin as it it\u2019s a core plugin (e.g. automatically participates in the overall lifecycle of the POD and receives all appropriate messages). The application can be built using local editors such as Visual Studio Code. Personas: Software Developer (JavaScript, UI5) Field Extensions Adding custom fields to DMC applications fields. Personas: Business User Side by Side Extensions Develop a separate side by side custom application, including a UI, that can be integrated via public APIs and extensions with DMC. The application can be built using local editors such as Visual Studio Code. Personas: Software Developer Integration Extensions DMC utilizes SAP Integration to integrate with external and other SAP Systems. Customer can utilize predefined iflows for various systems for the transformation of data. Alternative customers can develop their own or enrich existing ones. iflows nodes use XSLT or custom developed exits to transform data into the required format. The flows can be augmented with custom extensions written by a developer in the case the iflows are not capable of transforming the date to the desired format, or other data are needed to enrich the existing data. Personas: Software Developer Business User KPI Extensions Provides the flexibility to build complex KPI calculation logic that are specific to the customer and integrates with DMC to be aggregated at various levels of the enterprise hierarchy and visualized in DMC-Dashboard Designer. Personas: Software Developer Business Consultant Machine Learning Extensions Bring you own ML model trained on any ML service/tool and deploy it with DMC and integrate it to the business & manufacturing processes without a line of code. The ML model can be trained with common ML services/tools but needs to be exported or converted into TensorFlow JavaScript ML model binary files. Please check release notes for further updates on supported ML formats. Personas: Business User Citizen Data Scientist Note \u00b6 Our recommended extensibility platform for DMC is Kyma, however, it can be use case specific which may lead into different recommendations. Please know that DMC extensions can also be done with Cloud Foundry using a PaaS environment (or hyperscaler options which have not been fully explored). The main difference picking between these two options, outside of our recommendation, is the lifecycle and costs. Kyma takes care of the lifecycle, scalability, monitoring, deployment, etc. of the extensions but is more expensive while Cloud Foundry/PaaS will have lower upfront costs but can be costly in terms of complexity, time, etc. to implement lifecycle management separately. Real World Customer Examples \u00b6","title":"DMC Use Cases"},{"location":"DMCUseCases.html#note","text":"Our recommended extensibility platform for DMC is Kyma, however, it can be use case specific which may lead into different recommendations. Please know that DMC extensions can also be done with Cloud Foundry using a PaaS environment (or hyperscaler options which have not been fully explored). The main difference picking between these two options, outside of our recommendation, is the lifecycle and costs. Kyma takes care of the lifecycle, scalability, monitoring, deployment, etc. of the extensions but is more expensive while Cloud Foundry/PaaS will have lower upfront costs but can be costly in terms of complexity, time, etc. to implement lifecycle management separately.","title":"Note"},{"location":"DMCUseCases.html#real-world-customer-examples","text":"","title":"Real World Customer Examples"},{"location":"Exercise1.1.html","text":"Exercise 1.1 - Create Production Order with custom fields \u00b6 Step 1 - Create Custom Data in app Manage Custom Data \u00b6 Open app Manage Custom Data with your plant Select Shop Order, and define your own data fields, then save Data Field Field Label CD_SALES_ORDER_ID Sales Order CD_CUSTOMER_NAME Customer Name Step 2 - Define Rules for populate values for the fields \u00b6 Open app Manage Integration Workflows and select LOIPRO05_PRODORDER Copy the value from section 'Standard XSLT' Modify the value populating rule by goto the end of block of 'shopOrderIn', uncomments the section dev team reserved and build your own one, save it to Custom XSLT section. Sample XSLT Step 3 - Create Production Orders from SAP S/4 HANA \u00b6 Login to SAP S/4 HANA system Goto transaction co08 Enter the correct sales order, ordre type then hit 'enter' and an sales order based Production order genarted Confirm the Quantity and End date and hit 'Enter' Release the order first and then Save, you will be given an order number in the message Send the Production Order with program RCCLORD from transaction se38, Order, material, Production Plant, Order Type, Logical System and Message Type should be filled with. If the Plant id are dirrent between DMC and S/4 HANA, you need do the plant conversion, refer Plant Conversion Step 4 - Create Production Orders from DMC \u00b6 Open app Manage Orders and click 'Create' Fill in values for mandatory fields and save Step 5 - Verify Release Production Order \u00b6 Open app Manage Orders Select the order you created from DMC or SAP S/4 HANA Review the order, you should be able verify the Sales Order ID and Customer Name from tab 'Custom Data' Click button 'Release' Enter quantity you want to release and click button 'Release' to release the order Verify that number of SFCs added corresponding to your new quantity released","title":"Exercise 1.1"},{"location":"Exercise1.1.html#exercise-11-create-production-order-with-custom-fields","text":"","title":"Exercise 1.1 - Create Production Order with custom fields"},{"location":"Exercise1.1.html#step-1-create-custom-data-in-app-manage-custom-data","text":"Open app Manage Custom Data with your plant Select Shop Order, and define your own data fields, then save Data Field Field Label CD_SALES_ORDER_ID Sales Order CD_CUSTOMER_NAME Customer Name","title":"Step 1 - Create Custom Data in app Manage Custom Data"},{"location":"Exercise1.1.html#step-2-define-rules-for-populate-values-for-the-fields","text":"Open app Manage Integration Workflows and select LOIPRO05_PRODORDER Copy the value from section 'Standard XSLT' Modify the value populating rule by goto the end of block of 'shopOrderIn', uncomments the section dev team reserved and build your own one, save it to Custom XSLT section. Sample XSLT","title":"Step 2 - Define Rules for populate values for the fields"},{"location":"Exercise1.1.html#step-3-create-production-orders-from-sap-s4-hana","text":"Login to SAP S/4 HANA system Goto transaction co08 Enter the correct sales order, ordre type then hit 'enter' and an sales order based Production order genarted Confirm the Quantity and End date and hit 'Enter' Release the order first and then Save, you will be given an order number in the message Send the Production Order with program RCCLORD from transaction se38, Order, material, Production Plant, Order Type, Logical System and Message Type should be filled with. If the Plant id are dirrent between DMC and S/4 HANA, you need do the plant conversion, refer Plant Conversion","title":"Step 3 - Create Production Orders from SAP S/4 HANA"},{"location":"Exercise1.1.html#step-4-create-production-orders-from-dmc","text":"Open app Manage Orders and click 'Create' Fill in values for mandatory fields and save","title":"Step 4 - Create Production Orders from DMC"},{"location":"Exercise1.1.html#step-5-verify-release-production-order","text":"Open app Manage Orders Select the order you created from DMC or SAP S/4 HANA Review the order, you should be able verify the Sales Order ID and Customer Name from tab 'Custom Data' Click button 'Release' Enter quantity you want to release and click button 'Release' to release the order Verify that number of SFCs added corresponding to your new quantity released","title":"Step 5 - Verify Release Production Order"},{"location":"Exercise1.2.html","text":"Exercise 1.2 - Release Production Order \u00b6 Overview \u00b6 In this exercise, we would like to show you how you can release Production Order and generate the SFC next number based on custom business requirement. The next number of SFC release would be generated based on the custom field (e.g. Sales Order) of the production order. Step 1: Build your custom function in Kyma Runtime \u00b6 Access to your Kyma Dashboard. Under the \"Namespaces\" section, click the \"Add new namespace\" button to create a new namespace. Enter the name of your namespace, e.g dmc-extension. Under the \"Namespaces\" section, select the newly created namespace to access that. Go to the \"Workloads\" section, then click the \"Functions\" section and click the button \"Create Function\" to create a new function. Enter the name of your function, e.g get-nextnumber and click Create. Go to the \"Source\" tab under \"Code\" tab, copy the sample code \"index.js\" from Github Sample Code and paste in the inline editor. Go to the \"Dependencies\" tab under \"Code\" tab, copy the sample code \"package.json\" from Github Sample Code and paste in the inline editor. Click \"Save\" button, which automatically triggers the build and deployment process. Once it is finished, your function will be in the \"RUNNING\" status. Go to the \"Configuration\" tab and click the \"Expose Function\" button. Enter the name (e.g dmc-in-app-extension) and hostname (e.g dmc-in-app-extension) to create API rule. You can find your API End Point URL under the \"API Rules\". Step 2: Register your extension in service registry \u00b6 Open \"Manage Service Registery\" App in SAP DMC. Click \"Create\" button. Under \"Header\" tab, for the parameter \"Server Name\", enter the name accordingly. E.g.\"Ext_getnextnumber\". Under \"Header\" tab, for the paramter \"Group\", select \"FaaS\". Under \"Header\" tab, for the paramter \"Status\", enable that. Under \"General Information\" tab, for the parameter \"Protocol\", select \"REST\". Under \"General Information\" tab, for the parameter \"Method\", select \"POST\". Under \"General Information\" tab, for the paramter \"URL/Path\", enter the API End Point URL under the API Rule of your Kyma Function. Under \"General Information\" tab, for the parameter \"Is Extension\", select \"Yes\". Under \"Request Body\" tab, for the paramter \"Request Body\", enable that. Under \"Request Body\" tab, for the paramter \"Required\", select \"Yes\". Under \"Request Body\" tab, click \"Add\" button to add \"application/json\" content type. Under \"Request Body\" tab, select the Schema of \"application/json\" content type and click \"Define Inline Schema\". Define the inline scheme as following. { \"type\": \"object\", \"required\": [ \"event\", \"context\" ], \"properties\": { \"context\": { \"description\": \"FaaS Context\", \"type\": \"string\" }, \"event\": { \"description\": \"FaaS Event\", \"type\": \"string\" } } } Click \"Create\" button and your extension service is registered in SAP DMC. Step 3: Configure your extension in the next number of SFC Release \u00b6 Open \"Manage Next Numbers\" App. Go to \"SFC Release\" Tab and select the material you would like to add the extension. E.g. LIFTER-ASSY. For the parameter \"Prefix\", enter {ORDER_NAME}-{PLANT}_ . {ORDER_NAME} and {PLANT} are the replaceable parameters. It will replace the field name with the value of the field. {PLANT} is the plant where the material is being used. {ORDER_NAME} is the The order of the SFC number. Add a split character - in the middle in order to split these two fields in the extension. Replaceable Parameters for Use in Manage Next Numbers For the parameter \"Sequence Length\", enter 3 . For the parameter \"Extension\", choose the service \"Ext_getnextnumber\", which you've created in the \"Service Registery\" App. Step 4: Release the SFC to check the result \u00b6 Open \"Manage Orders\" App. Choose the Production Order with the material \"FORKLIFT-ASSY\". Go to the \"Custom Data\" tab. Check the data of the custom attribute \"Sales Order\" is not empty. Click \"Release Button\". The released SFC Number would be starting with the Sale Order and following with the current sequence number.","title":"Exercise 1.2"},{"location":"Exercise1.2.html#exercise-12-release-production-order","text":"","title":"Exercise 1.2 - Release Production Order"},{"location":"Exercise1.2.html#overview","text":"In this exercise, we would like to show you how you can release Production Order and generate the SFC next number based on custom business requirement. The next number of SFC release would be generated based on the custom field (e.g. Sales Order) of the production order.","title":"Overview"},{"location":"Exercise1.2.html#step-1-build-your-custom-function-in-kyma-runtime","text":"Access to your Kyma Dashboard. Under the \"Namespaces\" section, click the \"Add new namespace\" button to create a new namespace. Enter the name of your namespace, e.g dmc-extension. Under the \"Namespaces\" section, select the newly created namespace to access that. Go to the \"Workloads\" section, then click the \"Functions\" section and click the button \"Create Function\" to create a new function. Enter the name of your function, e.g get-nextnumber and click Create. Go to the \"Source\" tab under \"Code\" tab, copy the sample code \"index.js\" from Github Sample Code and paste in the inline editor. Go to the \"Dependencies\" tab under \"Code\" tab, copy the sample code \"package.json\" from Github Sample Code and paste in the inline editor. Click \"Save\" button, which automatically triggers the build and deployment process. Once it is finished, your function will be in the \"RUNNING\" status. Go to the \"Configuration\" tab and click the \"Expose Function\" button. Enter the name (e.g dmc-in-app-extension) and hostname (e.g dmc-in-app-extension) to create API rule. You can find your API End Point URL under the \"API Rules\".","title":"Step 1: Build your custom function in Kyma Runtime"},{"location":"Exercise1.2.html#step-2-register-your-extension-in-service-registry","text":"Open \"Manage Service Registery\" App in SAP DMC. Click \"Create\" button. Under \"Header\" tab, for the parameter \"Server Name\", enter the name accordingly. E.g.\"Ext_getnextnumber\". Under \"Header\" tab, for the paramter \"Group\", select \"FaaS\". Under \"Header\" tab, for the paramter \"Status\", enable that. Under \"General Information\" tab, for the parameter \"Protocol\", select \"REST\". Under \"General Information\" tab, for the parameter \"Method\", select \"POST\". Under \"General Information\" tab, for the paramter \"URL/Path\", enter the API End Point URL under the API Rule of your Kyma Function. Under \"General Information\" tab, for the parameter \"Is Extension\", select \"Yes\". Under \"Request Body\" tab, for the paramter \"Request Body\", enable that. Under \"Request Body\" tab, for the paramter \"Required\", select \"Yes\". Under \"Request Body\" tab, click \"Add\" button to add \"application/json\" content type. Under \"Request Body\" tab, select the Schema of \"application/json\" content type and click \"Define Inline Schema\". Define the inline scheme as following. { \"type\": \"object\", \"required\": [ \"event\", \"context\" ], \"properties\": { \"context\": { \"description\": \"FaaS Context\", \"type\": \"string\" }, \"event\": { \"description\": \"FaaS Event\", \"type\": \"string\" } } } Click \"Create\" button and your extension service is registered in SAP DMC.","title":"Step 2: Register your extension in service registry"},{"location":"Exercise1.2.html#step-3-configure-your-extension-in-the-next-number-of-sfc-release","text":"Open \"Manage Next Numbers\" App. Go to \"SFC Release\" Tab and select the material you would like to add the extension. E.g. LIFTER-ASSY. For the parameter \"Prefix\", enter {ORDER_NAME}-{PLANT}_ . {ORDER_NAME} and {PLANT} are the replaceable parameters. It will replace the field name with the value of the field. {PLANT} is the plant where the material is being used. {ORDER_NAME} is the The order of the SFC number. Add a split character - in the middle in order to split these two fields in the extension. Replaceable Parameters for Use in Manage Next Numbers For the parameter \"Sequence Length\", enter 3 . For the parameter \"Extension\", choose the service \"Ext_getnextnumber\", which you've created in the \"Service Registery\" App.","title":"Step 3: Configure your extension in the next number of SFC Release"},{"location":"Exercise1.2.html#step-4-release-the-sfc-to-check-the-result","text":"Open \"Manage Orders\" App. Choose the Production Order with the material \"FORKLIFT-ASSY\". Go to the \"Custom Data\" tab. Check the data of the custom attribute \"Sales Order\" is not empty. Click \"Release Button\". The released SFC Number would be starting with the Sale Order and following with the current sequence number.","title":"Step 4: Release the SFC to check the result"},{"location":"FAQ.html","text":"Frequently Asked Questions \u00b6 Can we do extensions in DMC with demo and test licence we have as partner \u00b6 Yes you can and you can start testing the concepts of DMC Extensibility building artifacts in BTP trial account. Can you show us what kind of tables are exposed from DMC via OData services? \u00b6 DMC does not expose the tables rather data is exposed via public REST APIs. Here is a list DMC APIs exposed and documented in SAP API Hub What kind of In-App extensions are possible withing DMC? \u00b6 There are whole range of possibilities with In-App Extensions such as extend existing APIs, trigger parallel processes, augment API outputs, custom Fields support and enriching integration content listening to stanard events. The activity hook can be a pre or post event. Is it theoretically possible to customize a POD button to open a link with a dynamic parameter that is filled with the currently selected shop order? \u00b6 Yes, it is possible with a custom POD Plugin. How can we migrate the activity hooks and how can we interact with external databases or systems (MII, external services) as we do with the hooks? \u00b6 This would be similar to how to tackle some of the In-App extension scenarios and interaction with external databases can happen in production process deisgner using APIs. Also, there is further work in progress in this area to make it more usable. What is the alternate solution for MII and can we keep using the same. \u00b6 We dont have direct replacement for MII. And absolutely, we can reuse the services from MII along with the new capabilities in Production Process Designer to orchestrate some of the business logic needed for custom processes and extensions. Where can we put our own implemented web services? \u00b6 Custom API/webservices can be deployed in PaaS account or in Kyma environment and can be linked to production process deisgner. We have some demos around this in the bootcamp event. Also, the service enhancements done at the shop floor such as Printing enhancements, Shop-order creation, SFC lifecycle checking, Customized ME-ERP backflushing, Scrap extension etc. can be addressed using the extensive array of extensibility mechanisms in DMC. Some of the conversation would be realized in the bootcamp excercises. Where can we create our own schema and how can access it from DMC? \u00b6 Customers/partners can have their own schema to store the custom objects/data in PaaS account or Kyma environment. We have some demo also on the bootcamp event. How we can refresh POD from Machine Connectivity trigger? \u00b6 We can subscribe to machine tags and refresh POD by sending notifications events. Can we show notifications on POD as per the changes in tag vaue changes? \u00b6 Yes, this can be done using the POD Messages or customers and partners can write POD plugins which can listen for the notification event. Is it correct to say SAP ME Java SDK knowledge is obsolete in SAP DMC or is there any Java involved? \u00b6 The extensions built in DMC can be microservices bringing the whole notion of persistence, service and UI. And building microservice in the cloud is language agnostic, so definitely the knowledge and design patterns can be repurposed here. For the Machine Learning piece, data is critical. Do we have the ability to do SDI or some kind of SLT tool, for extracting high volume of information? \u00b6 This work is in requirment phase followed by the design phase. How can we create/extend our own PODs? \u00b6 We can create custom PODs using standard plugins through configuration or through building new custom POD plugins. The custom plugins can be built in PaaS environment or in Kyma. Is there a guideline how to migrate existing SAP ME HTML plug-ins to DMC? \u00b6 Currently there are no guidelines to migrate ME POD plugins to DMC, but we are currently evaluating the feasibility. How is the transport between different systems (development, test, productive) managed? \u00b6 You can find the description here: Cloud Transport Management","title":"Content"},{"location":"FAQ.html#frequently-asked-questions","text":"","title":"Frequently Asked Questions"},{"location":"FAQ.html#can-we-do-extensions-in-dmc-with-demo-and-test-licence-we-have-as-partner","text":"Yes you can and you can start testing the concepts of DMC Extensibility building artifacts in BTP trial account.","title":"Can we do extensions in DMC with demo and test licence we have as partner"},{"location":"FAQ.html#can-you-show-us-what-kind-of-tables-are-exposed-from-dmc-via-odata-services","text":"DMC does not expose the tables rather data is exposed via public REST APIs. Here is a list DMC APIs exposed and documented in SAP API Hub","title":"Can you show us what kind of tables are exposed from DMC via OData services?"},{"location":"FAQ.html#what-kind-of-in-app-extensions-are-possible-withing-dmc","text":"There are whole range of possibilities with In-App Extensions such as extend existing APIs, trigger parallel processes, augment API outputs, custom Fields support and enriching integration content listening to stanard events. The activity hook can be a pre or post event.","title":"What kind of In-App extensions are possible withing DMC?"},{"location":"FAQ.html#is-it-theoretically-possible-to-customize-a-pod-button-to-open-a-link-with-a-dynamic-parameter-that-is-filled-with-the-currently-selected-shop-order","text":"Yes, it is possible with a custom POD Plugin.","title":"Is it theoretically possible to customize a POD button to open a link with a dynamic parameter that is filled with the currently selected shop order?"},{"location":"FAQ.html#how-can-we-migrate-the-activity-hooks-and-how-can-we-interact-with-external-databases-or-systems-mii-external-services-as-we-do-with-the-hooks","text":"This would be similar to how to tackle some of the In-App extension scenarios and interaction with external databases can happen in production process deisgner using APIs. Also, there is further work in progress in this area to make it more usable.","title":"How can we migrate the activity hooks and how can we interact with external databases or systems (MII, external services) as we do with the hooks?"},{"location":"FAQ.html#what-is-the-alternate-solution-for-mii-and-can-we-keep-using-the-same","text":"We dont have direct replacement for MII. And absolutely, we can reuse the services from MII along with the new capabilities in Production Process Designer to orchestrate some of the business logic needed for custom processes and extensions.","title":"What is the alternate solution for MII and can we keep using the same."},{"location":"FAQ.html#where-can-we-put-our-own-implemented-web-services","text":"Custom API/webservices can be deployed in PaaS account or in Kyma environment and can be linked to production process deisgner. We have some demos around this in the bootcamp event. Also, the service enhancements done at the shop floor such as Printing enhancements, Shop-order creation, SFC lifecycle checking, Customized ME-ERP backflushing, Scrap extension etc. can be addressed using the extensive array of extensibility mechanisms in DMC. Some of the conversation would be realized in the bootcamp excercises.","title":"Where can we put our own implemented web services?"},{"location":"FAQ.html#where-can-we-create-our-own-schema-and-how-can-access-it-from-dmc","text":"Customers/partners can have their own schema to store the custom objects/data in PaaS account or Kyma environment. We have some demo also on the bootcamp event.","title":"Where can we create our own schema and how can access it from DMC?"},{"location":"FAQ.html#how-we-can-refresh-pod-from-machine-connectivity-trigger","text":"We can subscribe to machine tags and refresh POD by sending notifications events.","title":"How we can refresh POD from Machine Connectivity trigger?"},{"location":"FAQ.html#can-we-show-notifications-on-pod-as-per-the-changes-in-tag-vaue-changes","text":"Yes, this can be done using the POD Messages or customers and partners can write POD plugins which can listen for the notification event.","title":"Can we show notifications on POD as per the changes in tag vaue changes?"},{"location":"FAQ.html#is-it-correct-to-say-sap-me-java-sdk-knowledge-is-obsolete-in-sap-dmc-or-is-there-any-java-involved","text":"The extensions built in DMC can be microservices bringing the whole notion of persistence, service and UI. And building microservice in the cloud is language agnostic, so definitely the knowledge and design patterns can be repurposed here.","title":"Is it correct to say SAP ME Java SDK knowledge is obsolete in SAP DMC or is there any Java involved?"},{"location":"FAQ.html#for-the-machine-learning-piece-data-is-critical-do-we-have-the-ability-to-do-sdi-or-some-kind-of-slt-tool-for-extracting-high-volume-of-information","text":"This work is in requirment phase followed by the design phase.","title":"For the Machine Learning piece, data is critical. Do we have the ability to do SDI or some kind of SLT tool, for extracting high volume of information?"},{"location":"FAQ.html#how-can-we-createextend-our-own-pods","text":"We can create custom PODs using standard plugins through configuration or through building new custom POD plugins. The custom plugins can be built in PaaS environment or in Kyma.","title":"How can we create/extend our own PODs?"},{"location":"FAQ.html#is-there-a-guideline-how-to-migrate-existing-sap-me-html-plug-ins-to-dmc","text":"Currently there are no guidelines to migrate ME POD plugins to DMC, but we are currently evaluating the feasibility.","title":"Is there a guideline how to migrate existing SAP ME HTML plug-ins to DMC?"},{"location":"FAQ.html#how-is-the-transport-between-different-systems-development-test-productive-managed","text":"You can find the description here: Cloud Transport Management","title":"How is the transport between different systems (development, test, productive) managed?"},{"location":"Field%26IntegrationExtensions.html","text":"Unit 2 - Field and Integration Extensions \u00b6 Overview \u00b6 Field Extensions \u00b6 The ability to add custom fields to DMC applications fields. Integration Extensions \u00b6 DMC utilizes SAP Integration to integrate with external and other SAP Systems. Customer can utilize predefined iflows for various systems for the transformation of data. Alternative customers can develop their own or enrich existing ones. Iflows nodes use XSLT or custom developed exits to transform data into the required format. Learning objectives \u00b6 Define the Custom Fields in DMC Override the default Integration settings from 'Manage Integration Workflows' Customize XSLT rules to populate values for the customized fields Prerequisites \u00b6 Integration Configurations between DMC and S/4 HANA has been setup You have access to the SAP CI tenant You have access to the DMC tenant Plant Conversion Rules configured(this is reuquired if plant id different between DMC and S/4 HANA) BTP Components \u00b6 SAP Integration Suite SAP Extension Suite Implementation \u00b6 Here is the block diagram which shows the integration extensibility.","title":"Content"},{"location":"Field%26IntegrationExtensions.html#unit-2-field-and-integration-extensions","text":"","title":"Unit 2 - Field and Integration Extensions"},{"location":"Field%26IntegrationExtensions.html#overview","text":"","title":"Overview"},{"location":"Field%26IntegrationExtensions.html#field-extensions","text":"The ability to add custom fields to DMC applications fields.","title":"Field Extensions"},{"location":"Field%26IntegrationExtensions.html#integration-extensions","text":"DMC utilizes SAP Integration to integrate with external and other SAP Systems. Customer can utilize predefined iflows for various systems for the transformation of data. Alternative customers can develop their own or enrich existing ones. Iflows nodes use XSLT or custom developed exits to transform data into the required format.","title":"Integration Extensions"},{"location":"Field%26IntegrationExtensions.html#learning-objectives","text":"Define the Custom Fields in DMC Override the default Integration settings from 'Manage Integration Workflows' Customize XSLT rules to populate values for the customized fields","title":"Learning objectives"},{"location":"Field%26IntegrationExtensions.html#prerequisites","text":"Integration Configurations between DMC and S/4 HANA has been setup You have access to the SAP CI tenant You have access to the DMC tenant Plant Conversion Rules configured(this is reuquired if plant id different between DMC and S/4 HANA)","title":"Prerequisites"},{"location":"Field%26IntegrationExtensions.html#btp-components","text":"SAP Integration Suite SAP Extension Suite","title":"BTP Components"},{"location":"Field%26IntegrationExtensions.html#implementation","text":"Here is the block diagram which shows the integration extensibility.","title":"Implementation"},{"location":"InAppExtensions.html","text":"Unit 3 - In-App Extensions \u00b6 Overview \u00b6 In-App Extensions \u00b6 The ability to extend a core SAP DMC application by the available extension points (e.g. extend existing API, trigger a parallel processes, augment API outputs,etc). This spectrum of this extensibility use can go from simple to complex if the logic of the extension needs to call API\u2019s from DMC. Learning objectives \u00b6 Understand how to build custom business logic that can be embbed to standard SAP DMC Applications such as \"Manage Next Number\". BTP Components \u00b6 You can build your own extension either using Kyma or Cloud Foundry runtime of BTP. Implementation \u00b6 \"Manage Next Number\" app allows you to define numbering patterns of the types SFC Release, SFC Serialize, Incident Number, Batch Number, Inventory Receipt, Packing Unit Number, Tool Number and Process Lot Number. The custom API defined in Service Registry can be linked to the field \"Extension\" which can be used to modify the next number behavior. Replaceable parameters are variables that you can use in the system. For more details, please refer to \"Replaceable Parameters for Use in Manage Next Numbers\" in SAP Help document . In our example, the extension is implemented in the Kyma Runtime of BTP. The below diagram shows the implementation architecture.","title":"Content"},{"location":"InAppExtensions.html#unit-3-in-app-extensions","text":"","title":"Unit 3 - In-App Extensions"},{"location":"InAppExtensions.html#overview","text":"","title":"Overview"},{"location":"InAppExtensions.html#in-app-extensions","text":"The ability to extend a core SAP DMC application by the available extension points (e.g. extend existing API, trigger a parallel processes, augment API outputs,etc). This spectrum of this extensibility use can go from simple to complex if the logic of the extension needs to call API\u2019s from DMC.","title":"In-App Extensions"},{"location":"InAppExtensions.html#learning-objectives","text":"Understand how to build custom business logic that can be embbed to standard SAP DMC Applications such as \"Manage Next Number\".","title":"Learning objectives"},{"location":"InAppExtensions.html#btp-components","text":"You can build your own extension either using Kyma or Cloud Foundry runtime of BTP.","title":"BTP Components"},{"location":"InAppExtensions.html#implementation","text":"\"Manage Next Number\" app allows you to define numbering patterns of the types SFC Release, SFC Serialize, Incident Number, Batch Number, Inventory Receipt, Packing Unit Number, Tool Number and Process Lot Number. The custom API defined in Service Registry can be linked to the field \"Extension\" which can be used to modify the next number behavior. Replaceable parameters are variables that you can use in the system. For more details, please refer to \"Replaceable Parameters for Use in Manage Next Numbers\" in SAP Help document . In our example, the extension is implemented in the Kyma Runtime of BTP. The below diagram shows the implementation architecture.","title":"Implementation"},{"location":"ParticipantGuide.html","text":"SAP DMC Exensibility Bootcamp \u00b6 Participant Checklist \u00b6 Candidates should come to the bootcamp with their own DMC Demo system. The exercise guide will be done by the Partner BTP trial accounts. To get started, follow https://developers.sap.com/tutorials/hcp-create-trial-account.html Follow the \"Prerequisite\" section to install the necessary tools. Candidates should have preliminary knowledge on NodeJS, SAPUI5 and Business Technology Platform. Prerequisite \u00b6 node ( Node.js version 12.x or 14.x is recommended) SAP Fiori Tools https://www.npmjs.com/package/@sap/generator-fiori docker (for example, Docker Desktop for macOS or Windows) A source code editor ( Visual Studio Code is recommended) bash or zsh shell to run the command snippets on MacOS or Linux, or Git Bash for Windows, MinGW, or Cygwin ) kubectl ( Kubernetes Command Line tool ), see this tutorial how to install it cf ( Cloud Foundry Command Line Interface (CLI) ) mta ( Multitarget application interface ) git ( Git Downloads ) Download postman tool Step 1 - Configure your Trial Account \u00b6 Go to SAP BTP Cockpit . Choose Go To Your Trial Account . If you don't have a user, you need to register for a free. Wait for the completion of the on-boarding. You should land on the Subaccounts page of your Global Account on trial. Choose trial . From the Navigation area , choose Security Trust Configuration . Select the default IdP by clicking on the name attribute. The name might be SAP ID Service or Default Identity provider . Enter the e-mail of the user to whom you want to give permissions. Click Show Assignments . Click Assign Role Collection . From the Assign Role Collection dropdown list, select the relevant role collection: Select Business_Application_Studio_Developer to assign a role collection to a developer. Select Business_Application_Studio_Administrator to assign a role collection to an administrator. Select Business_Application_Studio_Extension_Deployer to assign a role collection to an extension developer. Step 2 - Enable Kyma in Trial Account \u00b6 You need an SAP BTP Subaccount with consumption-based model (that is, Cloud Credits). For this tutorial you have two options: Option 1: Create Your Own SAP BTP Trial Account \u00b6 Go to SAP BTP Cockpit . Choose Go To Your Trial Account . You should land on the Subaccounts page of your Global Account on trial. Choose trial . Go to Kyma Environment . Choose Enable Kyma . Provide a Cluster Name . Choose Create . This takes a while. You can start the tutorial in the meantime. Option 2: Use Your Existing SAP BTP Subaccount \u00b6 If you already have an older trial account, then you might not see the Enable Kyma button. In that case: Go to Entitlements . Choose Configure Entitlements . Choose Add Service Plans . Search for and select Kyma runtime . Check the trial (Environment) checkbox. Choose Add 1 Service Plan . Choose Enable Kyma . Provide a Cluster Name . Choose Create . This takes a while. You can start the tutorial in the meantime. Step 3 - Assign Kyma Roles to User \u00b6 SAP BTP\u2019s XSUAA is used to access the Kyma runtime. Please follow the steps to assign Roles in the Kyma Environment . Step 4 - Getting started with Business Application Studio \u00b6 SAP Business Application Studio is a development environment available on SAP Business Technology Platform. To get started, please follow the link: https://developers.sap.com/tutorials/appstudio-onboarding.html Step 5 - Install SAP Plant Connectivity \u00b6 With SAP Plant Connectivity (PCo), SAP provides a software component that enables the exchange of data between an SAP system and the industry-specific standard data sources of different manufacturers, for example, process control systems, plant Historian systems, and SPC systems. Follow this link for more details SAP Plant Connectivity Step 6 - Install SAP Cloud Connector \u00b6 Configure a cloud connector that acts as a reverse invoke proxy between an on-premises network and SAP Business Technology Platform. The cloud connector comes standard as part of the SAP Cloud Integration service and serves as a link between SAP Business Technology Platform and on-premise systems such as SAP S/4HANA. Follow this link for more details Setting Up the Cloud Connector Step 7 - Configure Machine Model in DMC \u00b6 SAP Plant Connectivity is the connectivity layer between SAP Digital Manufacturing Cloud and the shop floor. As SAP Plant Connectivity is installed on the customer's premises, a cloud connector is required for the communication from SAP Digital Manufacturing Cloud to SAP Plant Connectivity. In addition, the communication needs to be secured by valid certificates. Follow this link for more details Integrate with SAP Plant Connectivity Step 8 - Integration with SAP ERP or SAP S/4HANA (Optional) \u00b6 SAP Digital Manufacturing Cloud for execution uses SAP Cloud Integration to communicate with external SAP ERP or SAP S/4HANA systems. You can connect various ERP systems, for example one system per plant or country. The global SAP Digital Manufacturing Cloud for execution system is used across all plants. Follow this link for more details Integration with SAP ERP or SAP S/4HANA Step 9 - Load DMC Demo Data to be done by SAP team \u00b6 We will be loading the basic data that will be needed for bootcamp excercise and for this we need create key Digital manufacturing instance and you can follow this link to get or create the key as needed. Step 10 - Postman collection for DMC \u00b6 This is the collection from SAP API Hub , you can also download the below collection to work with postman. Download postman collection Download postman environment Import collection in Postman Import environment in Postman Your postman is ready to use BTP Services for DMC Extensions \u00b6 SAP Business Application Studio SAP Business Application Studio is a development environment available on SAP Business Technology Platform. Follow this link for more details https://discovery-center.cloud.sap/serviceCatalog/business-application-studio?region=all Kyma Runtime SAP BTP, Kyma runtime is a fully managed Kubernetes runtime based on the open-source project \"Kyma\". This cloud-native solution allows the developers to extend SAP solutions with serverless Functions and combine them with containerized microservices. The offered functionality ensures smooth consumption of SAP and non-SAP applications, running workloads in a highly scalable environment, and building event- and API-based extensions. Follow this link for more details https://discovery-center.cloud.sap/missiondetail/3252/3281/ Cloud Foundary Runtime The SAP BTP, Cloud Foundry runtime lets you develop polyglot cloud-native applications and run them on the SAP BTP Cloud Foundry environment. Follow this link for more details https://discovery-center.cloud.sap/serviceCatalog/cloud-foundry-runtime?region=all HTML5 Application Repository The HTML5 Application Repository service for SAP BTP enables central storage of HTML5 applications on SAP BTP. The service allows application developers to manage the lifecycle of their HTML5 applications. In runtime, the service enables the consuming application, typically the application router, to access HTML5 application static content in a secure and efficient manner. Follow this link for more details https://discovery-center.cloud.sap/serviceCatalog/html5-application-repository-service?region=all Destination Service The Destination service lets you retrieve the backend destination details you need to configure applications in the Cloud Foundry environment. Follow this link for more details https://discovery-center.cloud.sap/serviceCatalog/destination?service_plan=lite&region=all SAP Integration Suite (CPI) SAP Integration Suite connects and contextualizes processes and data while enabling new content-rich applications to be assembled faster with less dependence on IT. Pre-built integration packs along with existing investments can be composed to deliver new outcomes with less involvement by integration experts. Follow this link for more details https://discovery-center.cloud.sap/serviceCatalog/integration-suite?region=all References \u00b6 DMC Extensibility Webinar -Digital Manufacturing Cloud Extensibility Overview - PDF | Recording SAP Extension Suite Learning Journey - https://learning.sap.com/learning-journey/building-extensions-with-sap-extension-suite Getting ready for Extensions - https://blogs.sap.com/2020/04/16/sap-digital-manufacturing-cloud-ready-for-extensions/ Sample Code - https://github.com/SAP-samples/digital-manufacturing-extension-samples DMC Business API Hub - https://api.sap.com/package/SAPDigitalManufacturingCloud?section=Artifacts DMC Integration Extensions https://blogs.sap.com/2021/08/24/sap-digital-manufacturing-cloud-integration-extension https://blogs.sap.com/2020/04/16/sap-digital-manufacturing-cloud-ready-for-extensions Integrating MS Teams - https://blogs.sap.com/2021/09/17/integrating-microsoft-teams-with-sap-digital-manufacturing-cloud AI/ML Solution for Visual Inspection - https://blogs.sap.com/2020/12/14/ai-ml-solution-for-visual-inspection-overview-how-to-close-the-production-gap-for-machine-learning DMC Roadmap Explorer - https://roadmaps.sap.com/board?PRODUCT=73555000100800001492&range=CURRENT-LAST#Q4%202021","title":"Content"},{"location":"ParticipantGuide.html#sap-dmc-exensibility-bootcamp","text":"","title":"SAP DMC Exensibility Bootcamp"},{"location":"ParticipantGuide.html#participant-checklist","text":"Candidates should come to the bootcamp with their own DMC Demo system. The exercise guide will be done by the Partner BTP trial accounts. To get started, follow https://developers.sap.com/tutorials/hcp-create-trial-account.html Follow the \"Prerequisite\" section to install the necessary tools. Candidates should have preliminary knowledge on NodeJS, SAPUI5 and Business Technology Platform.","title":"Participant Checklist"},{"location":"ParticipantGuide.html#prerequisite","text":"node ( Node.js version 12.x or 14.x is recommended) SAP Fiori Tools https://www.npmjs.com/package/@sap/generator-fiori docker (for example, Docker Desktop for macOS or Windows) A source code editor ( Visual Studio Code is recommended) bash or zsh shell to run the command snippets on MacOS or Linux, or Git Bash for Windows, MinGW, or Cygwin ) kubectl ( Kubernetes Command Line tool ), see this tutorial how to install it cf ( Cloud Foundry Command Line Interface (CLI) ) mta ( Multitarget application interface ) git ( Git Downloads ) Download postman tool","title":"Prerequisite"},{"location":"ParticipantGuide.html#step-1-configure-your-trial-account","text":"Go to SAP BTP Cockpit . Choose Go To Your Trial Account . If you don't have a user, you need to register for a free. Wait for the completion of the on-boarding. You should land on the Subaccounts page of your Global Account on trial. Choose trial . From the Navigation area , choose Security Trust Configuration . Select the default IdP by clicking on the name attribute. The name might be SAP ID Service or Default Identity provider . Enter the e-mail of the user to whom you want to give permissions. Click Show Assignments . Click Assign Role Collection . From the Assign Role Collection dropdown list, select the relevant role collection: Select Business_Application_Studio_Developer to assign a role collection to a developer. Select Business_Application_Studio_Administrator to assign a role collection to an administrator. Select Business_Application_Studio_Extension_Deployer to assign a role collection to an extension developer.","title":"Step 1 - Configure your Trial Account"},{"location":"ParticipantGuide.html#step-2-enable-kyma-in-trial-account","text":"You need an SAP BTP Subaccount with consumption-based model (that is, Cloud Credits). For this tutorial you have two options:","title":"Step 2 - Enable Kyma in Trial Account"},{"location":"ParticipantGuide.html#option-1-create-your-own-sap-btp-trial-account","text":"Go to SAP BTP Cockpit . Choose Go To Your Trial Account . You should land on the Subaccounts page of your Global Account on trial. Choose trial . Go to Kyma Environment . Choose Enable Kyma . Provide a Cluster Name . Choose Create . This takes a while. You can start the tutorial in the meantime.","title":"Option 1: Create Your Own SAP BTP Trial Account"},{"location":"ParticipantGuide.html#option-2-use-your-existing-sap-btp-subaccount","text":"If you already have an older trial account, then you might not see the Enable Kyma button. In that case: Go to Entitlements . Choose Configure Entitlements . Choose Add Service Plans . Search for and select Kyma runtime . Check the trial (Environment) checkbox. Choose Add 1 Service Plan . Choose Enable Kyma . Provide a Cluster Name . Choose Create . This takes a while. You can start the tutorial in the meantime.","title":"Option 2: Use Your Existing SAP BTP Subaccount"},{"location":"ParticipantGuide.html#step-3-assign-kyma-roles-to-user","text":"SAP BTP\u2019s XSUAA is used to access the Kyma runtime. Please follow the steps to assign Roles in the Kyma Environment .","title":"Step 3 - Assign Kyma Roles to User"},{"location":"ParticipantGuide.html#step-4-getting-started-with-business-application-studio","text":"SAP Business Application Studio is a development environment available on SAP Business Technology Platform. To get started, please follow the link: https://developers.sap.com/tutorials/appstudio-onboarding.html","title":"Step 4 - Getting started with Business Application Studio"},{"location":"ParticipantGuide.html#step-5-install-sap-plant-connectivity","text":"With SAP Plant Connectivity (PCo), SAP provides a software component that enables the exchange of data between an SAP system and the industry-specific standard data sources of different manufacturers, for example, process control systems, plant Historian systems, and SPC systems. Follow this link for more details SAP Plant Connectivity","title":"Step 5 - Install SAP Plant Connectivity"},{"location":"ParticipantGuide.html#step-6-install-sap-cloud-connector","text":"Configure a cloud connector that acts as a reverse invoke proxy between an on-premises network and SAP Business Technology Platform. The cloud connector comes standard as part of the SAP Cloud Integration service and serves as a link between SAP Business Technology Platform and on-premise systems such as SAP S/4HANA. Follow this link for more details Setting Up the Cloud Connector","title":"Step 6 - Install SAP Cloud Connector"},{"location":"ParticipantGuide.html#step-7-configure-machine-model-in-dmc","text":"SAP Plant Connectivity is the connectivity layer between SAP Digital Manufacturing Cloud and the shop floor. As SAP Plant Connectivity is installed on the customer's premises, a cloud connector is required for the communication from SAP Digital Manufacturing Cloud to SAP Plant Connectivity. In addition, the communication needs to be secured by valid certificates. Follow this link for more details Integrate with SAP Plant Connectivity","title":"Step 7 - Configure Machine Model in DMC"},{"location":"ParticipantGuide.html#step-8-integration-with-sap-erp-or-sap-s4hana-optional","text":"SAP Digital Manufacturing Cloud for execution uses SAP Cloud Integration to communicate with external SAP ERP or SAP S/4HANA systems. You can connect various ERP systems, for example one system per plant or country. The global SAP Digital Manufacturing Cloud for execution system is used across all plants. Follow this link for more details Integration with SAP ERP or SAP S/4HANA","title":"Step 8 - Integration with SAP ERP or SAP S/4HANA (Optional)"},{"location":"ParticipantGuide.html#step-9-load-dmc-demo-data-to-be-done-by-sap-team","text":"We will be loading the basic data that will be needed for bootcamp excercise and for this we need create key Digital manufacturing instance and you can follow this link to get or create the key as needed.","title":"Step 9 - Load DMC Demo Data to be done by SAP team"},{"location":"ParticipantGuide.html#step-10-postman-collection-for-dmc","text":"This is the collection from SAP API Hub , you can also download the below collection to work with postman. Download postman collection Download postman environment Import collection in Postman Import environment in Postman Your postman is ready to use","title":"Step 10 - Postman collection for DMC"},{"location":"ParticipantGuide.html#btp-services-for-dmc-extensions","text":"SAP Business Application Studio SAP Business Application Studio is a development environment available on SAP Business Technology Platform. Follow this link for more details https://discovery-center.cloud.sap/serviceCatalog/business-application-studio?region=all Kyma Runtime SAP BTP, Kyma runtime is a fully managed Kubernetes runtime based on the open-source project \"Kyma\". This cloud-native solution allows the developers to extend SAP solutions with serverless Functions and combine them with containerized microservices. The offered functionality ensures smooth consumption of SAP and non-SAP applications, running workloads in a highly scalable environment, and building event- and API-based extensions. Follow this link for more details https://discovery-center.cloud.sap/missiondetail/3252/3281/ Cloud Foundary Runtime The SAP BTP, Cloud Foundry runtime lets you develop polyglot cloud-native applications and run them on the SAP BTP Cloud Foundry environment. Follow this link for more details https://discovery-center.cloud.sap/serviceCatalog/cloud-foundry-runtime?region=all HTML5 Application Repository The HTML5 Application Repository service for SAP BTP enables central storage of HTML5 applications on SAP BTP. The service allows application developers to manage the lifecycle of their HTML5 applications. In runtime, the service enables the consuming application, typically the application router, to access HTML5 application static content in a secure and efficient manner. Follow this link for more details https://discovery-center.cloud.sap/serviceCatalog/html5-application-repository-service?region=all Destination Service The Destination service lets you retrieve the backend destination details you need to configure applications in the Cloud Foundry environment. Follow this link for more details https://discovery-center.cloud.sap/serviceCatalog/destination?service_plan=lite&region=all SAP Integration Suite (CPI) SAP Integration Suite connects and contextualizes processes and data while enabling new content-rich applications to be assembled faster with less dependence on IT. Pre-built integration packs along with existing investments can be composed to deliver new outcomes with less involvement by integration experts. Follow this link for more details https://discovery-center.cloud.sap/serviceCatalog/integration-suite?region=all","title":"BTP Services for DMC Extensions"},{"location":"ParticipantGuide.html#references","text":"DMC Extensibility Webinar -Digital Manufacturing Cloud Extensibility Overview - PDF | Recording SAP Extension Suite Learning Journey - https://learning.sap.com/learning-journey/building-extensions-with-sap-extension-suite Getting ready for Extensions - https://blogs.sap.com/2020/04/16/sap-digital-manufacturing-cloud-ready-for-extensions/ Sample Code - https://github.com/SAP-samples/digital-manufacturing-extension-samples DMC Business API Hub - https://api.sap.com/package/SAPDigitalManufacturingCloud?section=Artifacts DMC Integration Extensions https://blogs.sap.com/2021/08/24/sap-digital-manufacturing-cloud-integration-extension https://blogs.sap.com/2020/04/16/sap-digital-manufacturing-cloud-ready-for-extensions Integrating MS Teams - https://blogs.sap.com/2021/09/17/integrating-microsoft-teams-with-sap-digital-manufacturing-cloud AI/ML Solution for Visual Inspection - https://blogs.sap.com/2020/12/14/ai-ml-solution-for-visual-inspection-overview-how-to-close-the-production-gap-for-machine-learning DMC Roadmap Explorer - https://roadmaps.sap.com/board?PRODUCT=73555000100800001492&range=CURRENT-LAST#Q4%202021","title":"References"}]}